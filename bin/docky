#!/bin/bash
platforms=("woocommerce" "magento")

build_folder=""
build_platform=""
build_version="latest"

package_location="https://github.com/guzzilar"

##
# Show the usage of Docky.
##
doc() {
    echo -e ''
    echo -e 'usage: docky build [--platform=<name>] [--target=<version>]'
    echo -e ''
    echo -e '--platform\tSpecify the target platform that you want to build'
    echo -e '--target\tSpecify the target version that you want to build'
    echo -e ''
}

##
# Check if Docky supports a build target platform.
#
hasPlatform() {
    local platform

    for platform in ${platforms[@]}; do
        [[ $platform == $1 ]] && {
            return 0
        }
    done

    return 1
}

##
# Build it!
#
build() {
    build_folder="deploy/$build_platform"
    package_location="$package_location/docker-$build_platform/archive/master.zip"

    mkdir -p $build_folder
    mkdir $build_folder/tmp

    [[ ! -f $build_folder/tmp/docker-$build_platform.zip ]] && {
        wget -O $build_folder/tmp/docker-$build_platform.zip https://github.com/guzzilar/docker-woocommerce/archive/master.zip
    }

    unzip $build_folder/tmp/docker-$build_platform.zip -d $build_folder/tmp/
    mv $build_folder/tmp/docker-$build_platform-master/* $build_folder
    rm -R $build_folder/tmp/docker-$build_platform-master

    cd $build_folder
    bin/build --target=$build_version
}

# $1 cannot be empty.
# And the first argument must be "build".
[[ -z $1 || $1 != "build" ]] && {
    doc
    exit
}

# Remove "build" from arguments.
shift

# Reading arguments.
while [[ $# -gt 0 ]]; do
    case "$1" in
        --version=*)
            build_version="${1#*=}"
            shift
            ;;

        *)
            [[ -z $build_platform ]] && {
                if ! hasPlatform $1; then
                    echo "error: platform \"$1\" did not match any platform(s) Docky supported."
                    exit
                fi

                build_platform=$1
            }
            shift
            ;;
    esac
done

[[ ! -z $build_platform ]] && {
    build
}